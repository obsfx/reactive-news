{"version":3,"sources":["components/GlobalStyle.ts","components/Header.tsx","hooks/useFetchItemIDs.ts","components/ItemLoader.tsx","components/Item.tsx","components/ItemList.tsx","components/Hits.tsx","components/News.tsx","components/Ask.tsx","components/Show.tsx","components/Jobs.tsx","components/ItemDetails.tsx","components/Comment.tsx","components/ItemPage.tsx","components/App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","normalize","inter","HeaderContainer","styled","div","HeaderTitle","props","HeaderTitleIcon","HeaderTitleColored","span","HeaderGithub","a","HeaderLinks","HeaderLink","activeClassName","Header","to","href","useFetchItemIDs","endpoint","useState","itemIDs","setItemIDs","useEffect","fetch","response","json","getItemIDs","ItemLoader","width","height","margin","ItemLoaderContainer","ItemContainer","ItemNumber","ItemBody","ItemTitle","ItemTitleRoute","ItemTitleURL","ItemInfo","ItemInfoLink","Item","idx","id","item","setItem","itemID","itemResponse","by","score","time","title","type","url","text","fetchItem","split","epoch","diff","Math","abs","Date","now","days","floor","hours","minutes","timeDiff","ItemListContainer","LoadMoreButton","ItemList","listEndpoint","page","setPage","slice","map","onClick","prev","Hits","News","Ask","Show","Jobs","ItemDetailsContainer","ItemDetailsTitle","ItemDetailsText","ItemDetailsInfo","ItemDetailsInfoLink","ItemDetails","itemAuthor","itemScore","itemEpoch","itemTitle","itemText","ReactHtmlParser","CommentContainer","li","CommentInfo","CommentText","CommentChilds","ul","Comment","commentData","setCommentData","fetchComment","commentID","comment","kids","Promise","all","kidID","rawCommentData","childs","commentRoot","setComments","createCommentTree","commentRootData","child","ItemDetailsComments","ItemPage","useParams","details","setDetails","Number","AppContainer","AppBody","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.921a8974.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n// @ts-ignore\nimport inter from 'typeface-inter'\n// @ts-ignore\nimport normalize from 'normalize.css'\n\nconst GlobalStyle = createGlobalStyle`\n  ${normalize}\n  ${inter}\n\n  :root {\n    --body-background-color: #131516;\n\n    --header-background-color: #181a1b;\n    --header-title-color: #d3cfc9;\n    --header-title-icon-color: #a8a095;\n    --header-title-icon-border-color: #6a6357;\n    --header-title-span-color: #a5eeff;\n    --header-link-color: #a8a095;\n    --header-link-border-color: #3e4446;\n    --header-link-hover-color: #dddad6;\n    --header-link-active-color: #a5eeff;\n\n    --item-background-color: #1e2122;\n    --item-number-color: #e8e6e3;\n    --item-title-color: #dddad6;\n    --item-title-url-color: #a8a095;\n    --item-info-color: #a8a195;\n    --item-info-link-color: #bdb7af;\n    --item-details-text-link-color: #3391ff;\n\n    --item-loader-background-color: #25282a;\n\n    --item-details-background-color: #1e2122;\n    --item-details-text-color: #a8a195;\n\n    --load-more-button-color: #a8a195;\n\n    --comment-container-marker-color: #e8e6e3;\n    --comment-info-color: #a8a195;\n    --comment-text-color: #dddad6;\n    --comment-childs-border-color: #4b5255;\n    --comment-text-link-color: #3391ff;\n  }\n\n  body {\n    background-color: var(--body-background-color);\n    font-family: 'Inter', sans-serif;\n  }\n`\n\nexport default GlobalStyle\n","import styled from 'styled-components'\nimport { NavLink, Link } from 'react-router-dom'\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  padding: 5px;\n  background-color: var(--header-background-color);\n  font-size: 12px;\n`\n\nconst HeaderTitle = styled((props) => <Link {...props} />)`\n  display: flex;\n  text-decoration: none;\n  align-items: center;\n  color: var(--header-title-color);\n  font-weight: 300;\n`\n\nconst HeaderTitleIcon = styled.div`\n  font-size: 12px;\n  padding: 1.5px 3px;\n  font-weight: bold;\n  color: var(--header-title-icon-color);\n  border: 1px solid var(--header-title-icon-color);\n  margin-right: 10px;\n`\n\nconst HeaderTitleColored = styled.span`\n  color: var(--header-title-span-color);\n  font-weight: 400;\n`\n\nconst HeaderGithub = styled.a`\n  text-decoration: none;\n  display: flex;\n  align-self: center;\n  margin-left: 5px;\n  font-size: 10px;\n  color: var(--header-link-color);\n\n  &:hover {\n    color: var(--header-link-hover-color);\n  }\n`\n\nconst HeaderLinks = styled.div`\n  margin-left: 10px;\n  display: flex;\n  flex: 1;\n  align-items: center;\n`\n\nconst HeaderLink = styled((props) => <NavLink activeClassName=\"active\" {...props} />)`\n  color: var(--header-link-color);\n  padding: 0px 5px;\n  text-decoration: none;\n  border-right: 1px solid var(--header-link-border-color);\n\n  &.active {\n    font-weight: 500;\n    color: var(--header-link-active-color);\n  }\n\n  &:last-child {\n    border: none;\n  }\n\n  &:hover {\n    color: var(--header-link-hover-color);\n  }\n`\n\nconst Header = () => {\n  return (\n    <HeaderContainer>\n      <HeaderTitle to=\"/\">\n        <HeaderTitleIcon>Y</HeaderTitleIcon>\n        <HeaderTitleColored>Reactive</HeaderTitleColored>&nbsp;News\n      </HeaderTitle>\n\n      <HeaderLinks>\n        <HeaderLink to=\"/news\">new</HeaderLink>\n        <HeaderLink to=\"/ask\">ask</HeaderLink>\n        <HeaderLink to=\"/show\">show</HeaderLink>\n        <HeaderLink to=\"/jobs\">jobs</HeaderLink>\n      </HeaderLinks>\n      <HeaderGithub href=\"#\">(github/obsfx/reactive-news)</HeaderGithub>\n    </HeaderContainer>\n  )\n}\n\nexport default Header\n","import { useState, useEffect } from 'react'\n\nconst useFetchItemIDs = (endpoint: string) => {\n  const [itemIDs, setItemIDs] = useState<number[]>([])\n\n  useEffect(() => {\n    const getItemIDs = async () => {\n      const response: Response = await fetch(endpoint)\n      setItemIDs((await response.json()) || [])\n    }\n\n    getItemIDs()\n  }, [])\n\n  return itemIDs\n}\n\nexport default useFetchItemIDs\n","import styled from 'styled-components'\n\ntype Props = {\n  width: string\n  height: string\n  margin: string\n}\n\nconst ItemLoader = (props: Props) => {\n  const { width, height, margin } = props\n\n  const ItemLoaderContainer = styled.div`\n    background-color: var(--item-loader-background-color);\n    width: ${width};\n    height: ${height};\n    margin: ${margin};\n  `\n\n  return <ItemLoaderContainer />\n}\n\nexport default ItemLoader\n","import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport ItemLoader from './ItemLoader'\n\nconst ItemContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 2px 0px;\n`\n\nconst ItemNumber = styled.span`\n  margin-right: 10px;\n  font-size: 12px;\n  text-align: right;\n  min-width: 25px;\n  color: var(--item-number-color);\n`\n\nconst ItemBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 5px;\n`\nconst ItemTitle = styled.a`\n  text-decoration: none;\n  font-size: 12px;\n  font-weight: 500;\n  color: var(--item-title-color);\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst ItemTitleRoute = styled((props) => <Link {...props} />)`\n  text-decoration: none;\n  font-size: 12px;\n  font-weight: 500;\n  color: var(--item-title-color);\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst ItemTitleURL = styled.span`\n  font-size: 10px;\n  color: var(--item-title-url-color);\n`\n\nconst ItemInfo = styled.div`\n  font-size: 9px;\n  color: var(--item-info-color);\n  margin-top: 5px;\n`\n\nconst ItemInfoLink = styled((props) => <Link {...props} />)`\n  text-decoration: none;\n  color: var(--item-info-link-color);\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nexport type ItemData = {\n  by: string\n  id: number\n  score: number\n  time: number\n  title: string\n  type: string\n  url: string\n  text: string\n}\n\ntype Props = {\n  idx: number\n  id: number\n}\n\nconst Item = (props: Props) => {\n  const { idx, id } = props\n  const [item, setItem] = useState<ItemData | null>(null)\n\n  useEffect(() => {\n    const fetchItem = async (itemID: number) => {\n      const response: Response = await fetch(\n        `https://hacker-news.firebaseio.com/v0/item/${itemID}.json`\n      )\n\n      const itemResponse: any = await response.json()\n\n      setItem({\n        by: itemResponse.by || '',\n        id: itemResponse.id || -1,\n        score: itemResponse.score || 0,\n        time: itemResponse.time || 0,\n        title: itemResponse.title || '',\n        type: itemResponse.type || '',\n        url: itemResponse.url || '',\n        text: itemResponse.text || '',\n      })\n    }\n\n    fetchItem(id)\n  }, [])\n\n  const timeDiff = (epoch: number) => {\n    const diff = Math.abs(Date.now() - epoch * 1000)\n\n    const days: number = Math.floor(diff / (1000 * 60 * 60 * 24))\n    const hours: number = Math.floor(diff / (1000 * 60 * 60))\n    const minutes: number = Math.floor(diff / (1000 * 60))\n\n    if (days >= 1) return `${days} days ago`\n    if (hours >= 1) return `${hours} hours ago`\n\n    return `${minutes} minutes ago`\n  }\n\n  return (\n    <ItemContainer>\n      <ItemNumber>{idx}.</ItemNumber>\n      {item ? (\n        <ItemBody>\n          {item.url !== '' ? (\n            <ItemTitle href={item.url}>\n              {item.title}\n              <ItemTitleURL> ({item.url.split('/')[2]})</ItemTitleURL>\n            </ItemTitle>\n          ) : (\n            <ItemTitleRoute to={`/items/${item.id}`}>{item.title}</ItemTitleRoute>\n          )}\n          <ItemInfo>\n            {item.score} points by <ItemInfoLink to={`/items/${item.id}`}>{item.by}</ItemInfoLink>\n            {' | '}\n            <ItemInfoLink to={`/items/${item.id}`}> {timeDiff(item.time)}</ItemInfoLink>\n            {item.type === 'story' && (\n              <>\n                {' | '}\n                <ItemInfoLink to={`/items/${item.id}`}>discuss</ItemInfoLink>\n              </>\n            )}\n          </ItemInfo>\n        </ItemBody>\n      ) : (\n        <ItemLoader width=\"100%\" height=\"35px\" margin=\"2px 0px\" />\n      )}\n    </ItemContainer>\n  )\n}\n\nexport default Item\n","import { useState } from 'react'\nimport styled from 'styled-components'\nimport useFetchItemIDs from '../hooks/useFetchItemIDs'\nimport Item from './Item'\n\nconst ItemListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 15px 10px;\n  background-color: var(--item-background-color);\n`\n\nconst LoadMoreButton = styled.div`\n  font-size: 12px;\n  cursor: pointer;\n  margin-top: 15px;\n  color: var(--load-more-button-color);\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\ntype Props = {\n  listEndpoint: string\n}\n\nconst ItemList = (props: Props) => {\n  const pageLength: number = 30\n\n  const { listEndpoint } = props\n\n  const [page, setPage] = useState<number>(0)\n\n  const itemIDs: number[] = useFetchItemIDs(listEndpoint)\n\n  const handleLoadMoreButtonClick = () => {\n    setPage((prev: number) => prev + 1)\n  }\n\n  return (\n    <ItemListContainer>\n      {itemIDs.slice(0, (page + 1) * pageLength).map((id: number, idx: number) => (\n        <Item key={id} idx={idx + 1} id={id} />\n      ))}\n\n      <LoadMoreButton onClick={handleLoadMoreButtonClick}>More</LoadMoreButton>\n    </ItemListContainer>\n  )\n}\n\nexport default ItemList\n","import ItemList from './ItemList'\n\nconst Hits = () => {\n  const endpoint: string = 'https://hacker-news.firebaseio.com/v0/topstories.json'\n  return <ItemList listEndpoint={endpoint} />\n}\n\nexport default Hits\n","import ItemList from './ItemList'\n\nconst News = () => {\n  const endpoint: string = 'https://hacker-news.firebaseio.com/v0/newstories.json'\n  return <ItemList listEndpoint={endpoint} />\n}\n\nexport default News\n","import ItemList from './ItemList'\n\nconst Ask = () => {\n  const endpoint: string = 'https://hacker-news.firebaseio.com/v0/askstories.json'\n  return <ItemList listEndpoint={endpoint} />\n}\n\nexport default Ask\n","import ItemList from './ItemList'\n\nconst Show = () => {\n  const endpoint: string = 'https://hacker-news.firebaseio.com/v0/showstories.json'\n  return <ItemList listEndpoint={endpoint} />\n}\n\nexport default Show\n","import ItemList from './ItemList'\n\nconst Jobs = () => {\n  const endpoint: string = 'https://hacker-news.firebaseio.com/v0/jobstories.json'\n  return <ItemList listEndpoint={endpoint} />\n}\n\nexport default Jobs\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport ReactHtmlParser from 'react-html-parser'\n\nconst ItemDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 15px 10px;\n  background-color: var(--item-details-background-color);\n`\n\nconst ItemDetailsTitle = styled((props) => <Link {...props} />)`\n  text-decoration: none;\n  font-size: 14px;\n  font-weight: 500;\n  color: var(--item-title-color);\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst ItemDetailsText = styled.div`\n  margin-top: 15px;\n  font-size: 12px;\n  color: var(--item-details-text-color);\n\n  pre {\n    white-space: pre-wrap;\n    word-wrap: break-word;\n  }\n\n  a {\n    color: var(--item-details-text-link-color);\n  }\n`\n\nconst ItemDetailsInfo = styled.div`\n  font-size: 12px;\n  color: var(--item-info-color);\n  margin-top: 5px;\n`\n\nconst ItemDetailsInfoLink = styled((props) => <Link {...props} />)`\n  text-decoration: none;\n  color: var(--item-info-link-color);\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\ntype Props = {\n  itemAuthor: string\n  itemID: number\n  itemScore: number\n  itemEpoch: number\n  itemTitle: string\n  itemText: string\n}\n\nconst ItemDetails = (props: Props) => {\n  const { itemAuthor, itemID, itemScore, itemEpoch, itemTitle, itemText } = props\n\n  const timeDiff = (epoch: number) => {\n    const diff = Math.abs(Date.now() - epoch * 1000)\n\n    const days: number = Math.floor(diff / (1000 * 60 * 60 * 24))\n    const hours: number = Math.floor(diff / (1000 * 60 * 60))\n    const minutes: number = Math.floor(diff / (1000 * 60))\n\n    if (days >= 1) return `${days} days ago`\n    if (hours >= 1) return `${hours} hours ago`\n\n    return `${minutes} minutes ago`\n  }\n\n  return (\n    <ItemDetailsContainer>\n      <>\n        <ItemDetailsTitle to={`/items/${itemID}`}>{itemTitle}</ItemDetailsTitle>\n        <ItemDetailsInfo>\n          {itemScore} points by{' '}\n          <ItemDetailsInfoLink to={`/items/${itemID}`}>{itemAuthor}</ItemDetailsInfoLink>\n          {' | '}\n          <ItemDetailsInfoLink to={`/items/${itemID}`}> {timeDiff(itemEpoch)}</ItemDetailsInfoLink>\n        </ItemDetailsInfo>\n      </>\n\n      {itemText !== '' && <ItemDetailsText>{ReactHtmlParser(itemText)}</ItemDetailsText>}\n    </ItemDetailsContainer>\n  )\n}\n\nexport default ItemDetails\n","import { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport ReactHtmlParser from 'react-html-parser'\nimport ItemLoader from './ItemLoader'\n\nconst CommentContainer = styled.li`\n  &::marker {\n    color: var(--comment-container-marker-color);\n  }\n`\n\nconst CommentInfo = styled.div`\n  font-size: 10px;\n  color: var(--comment-info-color);\n  margin-top: 5px;\n`\n\nconst CommentText = styled.div`\n  font-size: 12px;\n  color: var(--comment-text-color);\n\n  pre {\n    white-space: pre-wrap;\n    word-wrap: break-word;\n  }\n\n  a {\n    color: var(--comment-text-link-color);\n  }\n`\n\nconst CommentChilds = styled.ul`\n  margin: 2px 0px;\n  border-left: 1px dashed var(--comment-childs-border-color);\n`\n\ntype CommentData = {\n  comment: {\n    by: string\n    id: number\n    time: number\n    text: string\n  }\n  childs: CommentData[]\n}\n\ntype Props = {\n  id: number\n}\n\nconst Comment = (props: Props) => {\n  const { id } = props\n  const [commentData, setCommentData] = useState<CommentData | null>(null)\n\n  useEffect(() => {\n    const fetchComment = async (commentID: number): Promise<CommentData> => {\n      const response: Response = await fetch(\n        `https://hacker-news.firebaseio.com/v0/item/${commentID}.json`\n      )\n      const comment: any = await response.json()\n\n      const rawCommentData: any[] = comment.kids\n        ? await Promise.all([...comment.kids.map((kidID: number) => fetchComment(kidID))])\n        : []\n\n      const childs: CommentData[] = rawCommentData.map((item: any) => ({\n        comment: {\n          by: item.comment.by || '',\n          id: item.comment.id || -1,\n          time: item.comment.time || 0,\n          text: item.comment.text || '',\n        },\n        childs: item.childs,\n      }))\n\n      return {\n        comment,\n        childs,\n      }\n    }\n\n    const setComments = async () => {\n      const commentRoot: CommentData = await fetchComment(id)\n      setCommentData(commentRoot)\n    }\n\n    setComments()\n  }, [])\n\n  const createCommentTree = (commentRootData: CommentData): React.ReactNode => {\n    const { comment, childs } = commentRootData\n\n    return (\n      <CommentContainer key={comment.id}>\n        <CommentInfo>\n          {comment.by} {timeDiff(comment.time)}\n        </CommentInfo>\n        <CommentText>{ReactHtmlParser(comment.text)}</CommentText>\n        <CommentChilds>\n          {childs.map((child: CommentData) => createCommentTree(child))}\n        </CommentChilds>\n      </CommentContainer>\n    )\n  }\n\n  const timeDiff = (itemEpoch: number) => {\n    const diff = Math.abs(Date.now() - itemEpoch * 1000)\n\n    const days: number = Math.floor(diff / (1000 * 60 * 60 * 24))\n    const hours: number = Math.floor(diff / (1000 * 60 * 60))\n    const minutes: number = Math.floor(diff / (1000 * 60))\n\n    if (days >= 1) return `${days} days ago`\n    if (hours >= 1) return `${hours} hours ago`\n\n    return `${minutes} minutes ago`\n  }\n\n  return (\n    <CommentChilds>\n      {commentData === null ? (\n        <ItemLoader width=\"100%\" height=\"80px\" margin=\"5px 0px\" />\n      ) : (\n        createCommentTree(commentData)\n      )}\n    </CommentChilds>\n  )\n}\n\nexport default Comment\n","import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useParams } from 'react-router-dom'\nimport ItemDetails from './ItemDetails'\nimport ItemLoader from './ItemLoader'\nimport Comment from './Comment'\n\nconst ItemDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px 10px;\n  background-color: var(--item-details-background-color);\n`\n\nconst ItemDetailsComments = styled.div`\n  padding: 5px;\n`\n\nexport type ItemDetailsData = {\n  by: string\n  id: number\n  kids: number[]\n  score: number\n  time: number\n  title: string\n  type: string\n  url: string\n  text: string\n}\n\nconst ItemPage = () => {\n  const { id } = useParams<{ id: string }>()\n  const [details, setDetails] = useState<ItemDetailsData | null>(null)\n\n  useEffect(() => {\n    const fetchItem = async (itemID: number) => {\n      const response: Response = await fetch(\n        `https://hacker-news.firebaseio.com/v0/item/${itemID}.json`\n      )\n\n      const item: any = await response.json()\n\n      setDetails({\n        by: item.by || '',\n        id: item.id || -1,\n        kids: item.kids || [],\n        score: item.score || 0,\n        time: item.time || 0,\n        title: item.title || '',\n        type: item.type || '',\n        url: item.url || '',\n        text: item.text || '',\n      })\n    }\n\n    fetchItem(Number(id))\n  }, [])\n\n  return (\n    <ItemDetailsContainer>\n      {details ? (\n        <>\n          <ItemDetails\n            itemAuthor={details.by}\n            itemID={details.id}\n            itemScore={details.score}\n            itemEpoch={details.time}\n            itemTitle={details.title}\n            itemText={details.text}\n          />\n\n          <ItemDetailsComments>\n            {details.kids.map((kidID: number) => (\n              <Comment key={kidID} id={kidID} />\n            ))}\n          </ItemDetailsComments>\n        </>\n      ) : (\n        <ItemLoader width=\"100%\" height=\"80px\" margin=\"5px 0px\" />\n      )}\n    </ItemDetailsContainer>\n  )\n}\n\nexport default ItemPage\n","import styled from 'styled-components'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport GlobalStyle from './GlobalStyle'\nimport Header from './Header'\nimport Hits from './Hits'\nimport News from './News'\nimport Ask from './Ask'\nimport Show from './Show'\nimport Jobs from './Jobs'\nimport ItemPage from './ItemPage'\n\nconst AppContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nconst AppBody = styled.div`\n  padding: 15px;\n  width: 900px;\n`\n\nconst App = () => {\n  return (\n    <AppContainer>\n      <GlobalStyle />\n      <Router>\n        <AppBody>\n          <Header />\n          <Switch>\n            <Route exact={true} path=\"/\">\n              <Hits />\n            </Route>\n            <Route path=\"/news\">\n              <News />\n            </Route>\n            <Route path=\"/ask\">\n              <Ask />\n            </Route>\n            <Route path=\"/show\">\n              <Show />\n            </Route>\n            <Route path=\"/jobs\">\n              <Jobs />\n            </Route>\n            <Route path=\"/items/:id\">\n              <ItemPage />\n            </Route>\n          </Switch>\n        </AppBody>\n      </Router>\n    </AppContainer>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}